name: Build AMI

on:
  pull_request:
    types:
       - closed
    branches:
       - main
       
       
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Zip Folders
        run: |
           zip -r webapp.zip /home/runner/work/webapp/webapp
        
      - name: Build AMI
        run: |
           packer build my-template.json
        env: 
           AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
           AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
           
      - name: Get latest AMI ID
        id: get-ami-id
        run: |
          latest_ami_id=$(docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY amazon/aws-cli ec2 describe-images --region us-east-1 --owners 317988945521 --query "sort_by(Images, &CreationDate)[-1].ImageId" --output text)
          echo "Latest AMI ID: $latest_ami_id"
          echo "::set-output name=ami_id::$latest_ami_id"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          
      - name: Create new Launch Template version
        run: |
          existing_launch_template_name="asg_launch_template"
          docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY amazon/aws-cli ec2 create-launch-template-version --launch-template-name $existing_launch_template_name --version-description "New version with updated AMI" --launch-template-data "{\"ImageId\":\"${{ steps.get-ami-id.outputs.ami_id }}\"}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
